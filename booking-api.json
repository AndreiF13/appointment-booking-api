{
  "openapi": "3.0.0",
  "info": {
    "version": "1.1-oas3",
    "title": "Appointment Booking",
    "description": "Tazweed Interview test API"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "user authentification",
        "description": "you may provide a valide email and password",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            }
          },
          "400": {
            "description": "please provide a username and password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          }
        }
      }
    },
    "/sellers": {
      "get": {
        "summary": "get sellers list",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "search seller",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seller"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "define seller time slots",
        "description": "update time slots",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time_slots": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "integer",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "minimum": 0,
                          "maximum": 6
                        },
                        "slots": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sellers/{sellerId}": {
      "get": {
        "summary": "Get seller details by id",
        "description": "Get a specific seller by id",
        "parameters": [
          {
            "in": "path",
            "name": "sellerId",
            "required": true,
            "description": "seller id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/appointments": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "get appointments of the connected user",
        "description": "get appointments by seller or buyer",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "offset": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BaseAppointment"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create Appointment",
        "description": "Create Appointment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BaseAppointment"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        }
      }
    },
    "/appointments/seller/{sellerId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "get seller appointments",
        "description": "get appointments by seller",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellerAppointment"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "sellerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/appointments/buyer/{buyerId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "get buyer appointments",
        "description": "get appointments by buyer",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuyerAppointment"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "buyerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/appointments/{appointmentId}": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Accept or Reject",
        "description": "Confirm Appointment  accept or reject",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "boolean",
                    "enum": [
                      "accept",
                      "reject"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Auth": {
        "type": "object",
        "properties": {
          "id_token": {
            "type": "string"
          },
          "id_token_expires_in": {
            "type": "integer",
            "description": "exiration time in ms"
          },
          "timeStamp": {
            "type": "integer",
            "description": "generation timestamp"
          }
        }
      },
      "Seller": {
        "type": "object",
        "required": [
          "name",
          "about"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "about": {
            "type": "string"
          }
        }
      },
      "Buyer": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "TimeSlot": {
        "type": "object",
        "required": [
          "begin",
          "end"
        ],
        "properties": {
          "begin": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "day": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "description": "0 SAT , 1 SUN , 2 MON , 3 THU , 4 TUE , 5 WED , 6 FRI",
            "minimum": 0,
            "maximum": 6
          }
        }
      },
      "Credentials": {
        "description": "login credentials",
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "application error code reference"
          },
          "message": {
            "type": "string",
            "description": "error message description"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "BaseAppointment": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "time_slot": {
            "type": "string"
          }
        }
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "seller": {
            "type": "string"
          },
          "timeslot": {
            "type": "string"
          }
        }
      },
      "SellerAppointment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAppointment"
          },
          {
            "type": "object",
            "properties": {
              "buyer": {
                "$ref": "#/components/schemas/Buyer"
              }
            }
          }
        ]
      },
      "BuyerAppointment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAppointment"
          },
          {
            "type": "object",
            "properties": {
              "seller": {
                "$ref": "#/components/schemas/Seller"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized - Access token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalError": {
        "description": "internal error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "ressource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}